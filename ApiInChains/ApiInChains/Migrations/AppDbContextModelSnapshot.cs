// <auto-generated />
using ApiInChains.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiInChains.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiInChains.TestData.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kira",
                            Species = "Chinchilla",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Freya",
                            Species = "Chinchilla",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Lexa",
                            Species = "Cat",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Czarek",
                            Species = "Cat",
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Tito",
                            Species = "Dog",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ira",
                            Species = "Dog",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("ApiInChains.TestData.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Harry",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Garry",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Barry",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Larry",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Aarry",
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("ApiInChains.TestData.Pet", b =>
                {
                    b.HasOne("ApiInChains.TestData.User", null)
                        .WithMany("Pets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiInChains.TestData.User", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
